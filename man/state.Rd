% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/state.R
\name{state}
\alias{state}
\title{State}
\usage{
state(
  value = (structure(function () 
 {
     .Call(S7_object_)
 }, name = "S7_object",
    properties = list(), abstract = FALSE, constructor = function () 
 {
    
    .Call(S7_object_)
 }, validator = function (self) 
 {
     if (!is_S7_type(self)) {
 
           "Underlying data is corrupt"
     }
 }, class = c("S7_class", "S7_object")))(),
  type = NULL,
  allow_null = FALSE
)
}
\arguments{
\item{value}{Initial value of the state}

\item{type}{The expected class}

\item{allow_null}{Is it allowed for the value to be NULL?}
}
\description{
A way of defining state for a shiny application. Alternative to \code{shiny::reactiveValues()}.
}
